
from django import forms
from django.core.exceptions import ValidationError
from django.contrib.auth.models import User
from django.contrib.auth.hashers import make_password

class SignUpForm(forms.Form):
    name = forms.CharField(label='Name', max_length=100)
    email = forms.EmailField(label='Email')
    password = forms.CharField(label='Password', widget=forms.PasswordInput)
    confirm_password = forms.CharField(label='Confirm Password', widget=forms.PasswordInput)

    def clean_email(self):
        email = self.cleaned_data.get('email')
        if not email:
            raise ValidationError('Email cannot be empty.')
        if not '@' in email:
            raise ValidationError('Invalid email format.')
        if User.objects.filter(email=email).exists():
            raise ValidationError('Email already exists.')
        return email

    def clean(self):
        cleaned_data = super().clean()
        name = cleaned_data.get('name')
        password = cleaned_data.get('password')
        confirm_password = cleaned_data.get('confirm_password')

        if not name:
            raise ValidationError('Name cannot be empty.')

        if not name.isalpha():
            raise ValidationError('Name should contain only alphabetic characters.')

        if password and confirm_password and password != confirm_password:
            raise ValidationError('Passwords do not match.')

        return cleaned_data

    def save(self):
        name = self.cleaned_data['name']
        email = self.cleaned_data['email']
        password = self.cleaned_data['password']

        user = User.objects.create(
            username=email,
            email=email,
            first_name=name,
            password=make_password(password)  # Encrypt the password
        )

        return user

<h1>Sign Up</h1>
<form method="post">
    {% csrf_token %}
    <div>
        {{ form.name.label_tag }}
        {{ form.name }}
        {% for error in form.name.errors %}
            <span style="color: red;">{{ error }}</span>
        {% endfor %}
    </div>
    <div>
        {{ form.email.label_tag }}
        {{ form.email }}
        {% for error in form.email.errors %}
            <span style="color: red;">{{ error }}</span>
        {% endfor %}
    </div>
    <div>
        {{ form.password.label_tag }}
        {{ form.password }}
        {% for error in form.password.errors %}
            <span style="color: red;">{{ error }}</span>
        {% endfor %}
    </div>
    <div>
        {{ form.confirm_password.label_tag }}
        {{ form.confirm_password }}
        {% for error in form.confirm_password.errors %}
            <span style="color: red;">{{ error }}</span>
        {% endfor %}
    </div>
    <button type="submit">Sign Up</button>
</form>

