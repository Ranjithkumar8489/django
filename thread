def run_bot_continuously(symbol, amount, exchanges, interval=60):
    try:
        while True:
            result = arbitrage(symbol, amount, exchanges)
            if result:
                return result  # Return the result if successful
            time.sleep(interval)
    except KeyboardInterrupt:
        print("Bot stopped by user.")

from django.http import JsonResponse

def start_bot_view(request):
    global bot_thread, bot_running
    if bot_running:
        return JsonResponse({"status": "Bot already running."})
    
    symbol = "TRX/USDT"
    amount = 500.0
    exchanges = ["binance", "kucoin", "kraken"]
    interval = 60  # Run the bot every 60 seconds
    
    bot_running = True
    result_queue = []  # To store results from the bot
    
    def run_bot_and_capture_results():
        nonlocal result_queue
        while bot_running:
            result = run_bot_continuously(symbol, amount, exchanges, interval)
            result_queue.append(result)
    
    bot_thread = threading.Thread(target=run_bot_and_capture_results)
    bot_thread.start()
    
    # Wait for the first result to be available (optional)
    while not result_queue:
        time.sleep(1)
    
    return JsonResponse({"status": "Bot started.", "first_result": result_queue[0]})
def stop_bot_view(request):
    global bot_running
    if not bot_running:
        return JsonResponse({"status": "Bot is not running."})
    
    bot_running = False
    if bot_thread:
        bot_thread.join()  # Wait for the thread to finish
    
    return JsonResponse({"status": "Bot stopped."})

<!-- templates/bot_results.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Bot Results</title>
</head>
<body>
    <h1>Bot Results</h1>
    <ul>
        {% for result in result_queue %}
            <li>Profit: {{ result.profit }}</li>
            <li>Buy Order Details:</li>
            <ul>
                <li>Exchange: {{ result.buy_order_details.exchange }}</li>
                <li>Order ID: {{ result.buy_order_details.order.id }}</li>  <!-- Assuming order ID is accessible this way -->
                <li>Price: {{ result.buy_order_details.order.price }}</li>
                <li>Amount: {{ result.buy_order_details.order.amount }}</li>
                <!-- Add more details as needed -->
            </ul>
            <li>Sell Order Details:</li>
            <ul>
                <li>Exchange: {{ result.sell_order_details.exchange }}</li>
                <li>Order ID: {{ result.sell_order_details.order.id }}</li>  <!-- Assuming order ID is accessible this way -->
                <li>Price: {{ result.sell_order_details.order.price }}</li>
                <li>Amount: {{ result.sell_order_details.order.amount }}</li>
                <!-- Add more details as needed -->
            </ul>
            <hr>
        {% endfor %}
    </ul>
</body>
</html>
